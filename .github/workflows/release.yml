# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

on:
  release:
    types:
    - published

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace}}/nuget

defaults:
  run:
    shell: pwsh

jobs:
  create_nuget:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
  
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
    
    - name: Pack projects
      run: |
        $tag = "${{ github.event.release.tag_name }}".TrimStart('v');
        echo "Using version $tag"
        dotnet pack --configuration Release --output ${{ env.NuGetDirectory }} /p:Version=$tag
    
    - uses: actions/upload-artifact@v4
      with:
        name: nuget
        if-no-files-found: error
        retention-days: 7
        path: ${{ env.NuGetDirectory }}/*.nupkg

#  run_tests:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v4
#  
#    - name: Setup .NET
#      uses: actions/setup-dotnet@v4
#
#    - name: Run tests
#      run: dotnet test --configuration Release

  deploy:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [ create_nuget ] #, run_tests ]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4

      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }